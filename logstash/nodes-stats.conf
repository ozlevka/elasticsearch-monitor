# Configuration for take ES statistics from ES cluster and to put to ES (might be another) cluster

input {
	http_poller {
		urls => {
			nodes => {
				url => "http://master:9200/_nodes/stats"
				id => "nodes"
			}

		}

		schedule => {every => "10s"}
	}
}

filter {
	ruby {
			code => '
				nodes = event.get("[nodes]")
				new_nodes = {}				
				for k in nodes.keys
					new_nodes[nodes[k]["host"].gsub(".", "_")] = nodes[k]
				end
				event.set("[nodes]", new_nodes)
			'
	}

	ruby {
		init => '
			@@docscount = Hash.new
			@@indexing = Hash.new 
		'
		code => '
			nodes = event.get("nodes")
			nodes.keys.each do |k|
				if @@docscount.has_key? k
					event.set("["+ k + "][indices][docs][delta][count]", (nodes[k]["indices"]["docs"]["count"] - @@docscount[k]))
					@@docscount[k] = nodes[k]["indices"]["docs"]["count"]
				else
					event.set("["+ k + "][indices][docs][delta][count]", 0)
					@@docscount[k] = nodes[k]["indices"]["docs"]["count"]
				end

				if @@indexing.has_key? k
					event.set("["+ k + "][indices][indexing][delta][index_total]", (nodes[k]["indices"]["indexing"]["index_total"] - @@docscount[k]))
					@@indexing[k] = nodes[k]["indices"]["indexing"]["index_total"]
				else
					event.set("["+ k + "][indices][indexing][delta][index_total]", 0)
					@@indexing[k] = nodes[k]["indices"]["indexing"]["index_total"]
				end	
				
			end			
		'
	}
} 


output {
	
	elasticsearch {
		hosts => ["http://master:9200"]
		index => "stats-%{+YYYY-MM-dd}"
		document_type => "nodes_stats"
	}

	#stdout {
	#	codec => rubydebug
	#}
}