# Configuration for take ES statistics from ES cluster and to put to ES (might be another) cluster

input {
	http_poller {
		urls => {
			nodes => {
				url => "http://master:9200/_nodes/stats"
				id => "nodes"
			}

		}

		schedule => {every => "10s"}
	}
}

filter {
	ruby {
			code => '
				nodes = event.get("[nodes]")
				new_nodes = {}				
				for k in nodes.keys
					new_nodes[nodes[k]["host"].gsub(".", "_")] = nodes[k]
				end
				event.set("[nodes]", new_nodes)
			'
	}


	ruby {
		init => '
			@@doc_count = Hash.new

			def compute_key_delta(node_data, current_key, accumulator, keys) 
				acc_variable = LogStash::Filters::Ruby.class_variable_get(accumulator)
				current_value = node_data
				keys.each do |k|
					current_value = current_value[k]
				end				
				if acc_variable.has_key? current_key
					the_value = current_value - acc_variable[current_key]
					acc_variable[current_key] = current_value
					return the_value
				else
					acc_variable[current_key] = current_value
					return current_value
				end
			end
		'

		code => '
			nodes = event.get("nodes")
			nodes.keys.each do |key|
				event.set("[nodes][" + key + "][indices][docs][delta][count]", compute_key_delta(nodes[key], key, :@@doc_count, ["indices", "docs", "count"]))
			end
		'
	}

	
} 


output {
	
	elasticsearch {
		hosts => ["http://localhost:9200"]
		index => "stats-%{+YYYY-MM-dd}"
		document_type => "nodes_stats"
	}

	#stdout {
	#	codec => rubydebug
	#}
}